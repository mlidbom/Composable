<ProjectConfiguration>
  <Settings>
    <IgnoredTests>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationPerformanceTest_InMemory.When_there_are_no_migrations_uncached_loading_takes_less_than_20_milliseconds_cached_less_than_5_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationPerformanceTest_InMemory.With_four_migrations_mutation_that_all_actually_changes_things_uncached_loading_takes_less_than_20_milliseconds_cached_less_than_5_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationPerformanceTest_InMemory.With_four_migrations_that_change_nothing_uncached_loading_takes_less_than_20_milliseconds_cached_less_than_5_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationPerformanceTest_SqlServer.When_there_are_no_migrations_uncached_loading_takes_less_than_20_milliseconds_cached_less_than_5_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationPerformanceTest_SqlServer.With_four_migrations_mutation_that_all_actually_changes_things_uncached_loading_takes_less_than_20_milliseconds_cached_less_than_5_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationPerformanceTest_SqlServer.With_four_migrations_that_change_nothing_uncached_loading_takes_less_than_20_milliseconds_cached_less_than_5_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Given_Ec1_E1_before_E1_E2_after_E2_E3_throws_NonIdempotentMigrationDetectedException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Given_Ec1_E1_Ef_Inserting_E3_E4_before_E1_then_E5_before_E4</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Given_Ec1_E1_Inserting_E2_before_E1_then_E3_before_E2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Given_Ec1_E1_Inserting_E3_E2_before_E1_then_E4_before_E3</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E2_after_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E2_after_E1_at_end_of_stream</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E2_After_E1_Persisting_and_then_Inserting_E3_after_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E2_Before_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E2_Before_E1_Persisting_and_then_Inserting_E3_before_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E2_before_E1_then_E3_before_E2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E3_before_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E3_E4_before_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E3_E4_before_E1_then_E5_before_E3</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E3_E4_before_E1_then_E5_before_E3_2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E3_E4_before_E1_then_E5_before_E4_2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E3_E4_before_E1_then_E5_before_E4_then_replace_E4_with_E6</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Inserting_E3_E4_before_E1_then_E5_before_E4_then_replace_E4_with_E6_then_replace_Ef_with_E7_then_insert_E8_after_E7</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.PersistingMigrationsOfTheSameAggregateMultipleTimes</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.PersistingMigrationsOfTheSameAggregateMultipleTimesWithEventsAddedInTheMiddleAndAfter</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Replacing_E1_with_E2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Replacing_E1_with_E2_at_end_of_stream</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Replacing_E1_with_E2_E3</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Replacing_E1_with_E2_E3_2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Replacing_E1_with_E2_E3_at_end_of_stream</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Replacing_E1_with_E2_E3_then_an_unrelated_migration_v2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Replacing_E1_with_E2_E3_then_E2_with_E4</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.Replacing_E1_with_E2_then_irrelevant_migration</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_InMemory.UpdatingAnAggregateAfterPersistingMigrations</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Given_Ec1_E1_before_E1_E2_after_E2_E3_throws_NonIdempotentMigrationDetectedException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Given_Ec1_E1_Ef_Inserting_E3_E4_before_E1_then_E5_before_E4</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Given_Ec1_E1_Inserting_E2_before_E1_then_E3_before_E2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Given_Ec1_E1_Inserting_E3_E2_before_E1_then_E4_before_E3</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E2_after_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E2_after_E1_at_end_of_stream</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E2_After_E1_Persisting_and_then_Inserting_E3_after_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E2_Before_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E2_Before_E1_Persisting_and_then_Inserting_E3_before_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E2_before_E1_then_E3_before_E2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E3_before_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E3_E4_before_E1</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E3_E4_before_E1_then_E5_before_E3</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E3_E4_before_E1_then_E5_before_E3_2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E3_E4_before_E1_then_E5_before_E4_2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E3_E4_before_E1_then_E5_before_E4_then_replace_E4_with_E6</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Inserting_E3_E4_before_E1_then_E5_before_E4_then_replace_E4_with_E6_then_replace_Ef_with_E7_then_insert_E8_after_E7</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Persisting_migrations_and_then_updating_the_aggregate_from_another_processes_EventStore_results_in_both_processes_seeing_identical_histories</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.PersistingMigrationsOfTheSameAggregateMultipleTimes</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.PersistingMigrationsOfTheSameAggregateMultipleTimesWithEventsAddedInTheMiddleAndAfter</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Replacing_E1_with_E2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Replacing_E1_with_E2_at_end_of_stream</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Replacing_E1_with_E2_E3</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Replacing_E1_with_E2_E3_2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Replacing_E1_with_E2_E3_at_end_of_stream</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Replacing_E1_with_E2_E3_then_an_unrelated_migration_v2</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Replacing_E1_with_E2_E3_then_E2_with_E4</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.Replacing_E1_with_E2_then_irrelevant_migration</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest_SqlServer.UpdatingAnAggregateAfterPersistingMigrations</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreTests.DeleteEventsDeletesTheEventsForOnlyTheSpecifiedAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreTests.GetListOfAggregateIds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreTests.GetListOfAggregateIdsUsingEventType</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreTests.StreamEventsSinceReturnsWholeEventLogWhenFetchingALargeNumberOfEvents_EnsureBatchingDoesNotBreakThings</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreTests.StreamEventsSinceReturnsWholeEventLogWhenFromEventIdIsNull</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.AggregateCannotBeRetrievedAfterBeingDeleted</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.CanLoadSpecificVersionOfAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.CanSaveAndLoadAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.Concurrent_read_only_access_to_aggregate_history_can_occur_in_parallel</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.DeletingAnAggregateDoesNotPreventEventsFromItFromBeingRaised</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.DoesNotExplodeWhenSavingMoreThan10Events</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.DoesNotUpdateAggregatesLoadedViaSpecificVersion</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.Events_should_be_published_immediately</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.EventsArePublishedImmediatelyOnAggregateChanges</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.If_the_first_transaction_to_insert_an_event_of_specific_type_fails_the_next_succeeds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.InsertNewEventType_should_not_throw_exception_if_the_event_type_has_been_inserted_by_something_else</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.ResetsAggregatesAfterSaveChanges</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.ReturnsSameInstanceOnLoadAfterSave</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.ReturnsSameInstanceOnRepeatedLoads</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.ThrowsIfUsedByMultipleThreads</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.ThrowsWhenAttemptingToSaveExistingAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.TracksAndUpdatesLoadedAggregates</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.When_deleting_and_then_fetching_an_aggregates_history_the_history_should_be_gone</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.When_fetching_and_deleting_an_aggregate_then_fetching_history_again_the_history_should_be_gone</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.When_fetching_history_from_the_same_instance_after_updating_an_aggregate_the_fetched_history_includes_the_new_events</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.InMemoryEventStoreUpdaterTests.WhenFetchingAggregateThatDoesNotExistNoSuchAggregateExceptionIsThrown</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.Query.Models.AutoGenerated.QueryModelGeneratingDocumentDbReaderTests.CanFetchQueryModelAfterAggregateHasBeenCreated</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.Query.Models.AutoGenerated.QueryModelGeneratingDocumentDbReaderTests.CanReturnPreviousVersionsOfQueryModel</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.Query.Models.AutoGenerated.QueryModelGeneratingDocumentDbReaderTests.ReturnsUpdatedDataAfterTransactionHasCommitted</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.Query.Models.AutoGenerated.QueryModelGeneratingDocumentDbReaderTests.ThrowsExceptionIfInstanceDoesNotExist</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.Query.Models.AutoGenerated.QueryModelGeneratingDocumentDbReaderTests.ThrowsExceptionWhenTryingToFetchDeletedEntity</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.SqlServerEventStoreTests.DeleteEventsDeletesTheEventsForOnlyTheSpecifiedAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.SqlServerEventStoreTests.GetListOfAggregateIds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.SqlServerEventStoreTests.GetListOfAggregateIdsUsingEventType</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.SqlServerEventStoreTests.StreamEventsSinceReturnsWholeEventLogWhenFetchingALargeNumberOfEvents_EnsureBatchingDoesNotBreakThings</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.CQRS.SqlServerEventStoreTests.StreamEventsSinceReturnsWholeEventLogWhenFromEventIdIsNull</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreTest.Does_not_call_db_in_constructor</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreTest.ShouldCacheEventsBetweenInstancesTransaction</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreTest.ShouldNotCacheEventsSavedDuringFailedTransactionEvenIfReadDuringSameTransaction</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.AggregateCannotBeRetrievedAfterBeingDeleted</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.CanLoadSpecificVersionOfAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.CanSaveAndLoadAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.Concurrent_read_only_access_to_aggregate_history_can_occur_in_parallel</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.DeletingAnAggregateDoesNotPreventEventsFromItFromBeingRaised</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.DoesNotExplodeWhenSavingMoreThan10Events</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.DoesNotUpdateAggregatesLoadedViaSpecificVersion</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.Events_should_be_published_immediately</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.EventsArePublishedImmediatelyOnAggregateChanges</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.If_an_updater_is_used_in_two_transactions_an_exception_is_thrown</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.If_the_first_transaction_to_insert_an_event_of_specific_type_fails_the_next_succeeds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.InsertNewEventType_should_not_throw_exception_if_the_event_type_has_been_inserted_by_something_else</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.ResetsAggregatesAfterSaveChanges</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.ReturnsSameInstanceOnLoadAfterSave</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.ReturnsSameInstanceOnRepeatedLoads</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.Serializes_access_to_an_aggregate_so_that_concurrent_transactions_succeed</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.Serializes_access_to_an_aggregate_so_that_concurrent_transactions_succeed_even_if_history_has_been_read_outside_of_modifying_transactions</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.ThrowsIfUsedByMultipleThreads</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.ThrowsWhenAttemptingToSaveExistingAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.TracksAndUpdatesLoadedAggregates</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.When_deleting_and_then_fetching_an_aggregates_history_the_history_should_be_gone</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.When_fetching_and_deleting_an_aggregate_then_fetching_history_again_the_history_should_be_gone</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.When_fetching_history_from_the_same_instance_after_updating_an_aggregate_the_fetched_history_includes_the_new_events</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.CQRS.EventSourcing.Sql.SqlServerEventStoreUpdaterTests.WhenFetchingAggregateThatDoesNotExistNoSuchAggregateExceptionIsThrown</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.AddingAndRemovingObjectResultsInNoObjectBeingSaved</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.AddingRemovingAndAddingObjectInTransactionResultsInNoObjectBeingSaved</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.CallingSaveWithAnInteraceAsTypeParameterDoesNotExplode</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.Can_get_all_documents_of_previously_unknown_class_added_by_onother_documentDb_instance</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.Can_get_all_documents_of_previously_unknown_class_added_by_onother_documentDb_instance_byId</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.Can_get_document_of_previously_unknown_class_added_by_onother_documentDb_instance</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.CanSaveAndLoadAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.CanSaveAndLoadAggregateForUpdate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.DeletingAllObjectsOfATypeLeavesNoSuchObjectsInTheDbButLeavesOtherObjectsInPlaceAndReturnsTheNumberOfDeletedObjects</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.DeletingAllObjectsOfATypeLeavesObjectOfInheritingTypes</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.FetchesAllinstancesPerType</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.GetAllHandlesSubTyping</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.GetAllIdsShouldOnlyReturnResultsWithTheGivenType</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.GetAllIdsShouldOnlyReturnResultsWithTheGivenTypeWhenCalledWithinTheInsertingTransaction</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.GetAllWithIdsReturnsAsManyResultsAsPassedIds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.GetAllWithIdsReturnsTheSameInstanceForAnyPreviouslyFetchedDocuments</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.GetAllWithIdsThrowsNoSuchDocumentExceptionExceptionIfAnyIdIsMissing</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.GetByIdsShouldReturnOnlyMatchingResultEvenWhenMoreResultsAreInTheCache</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.GetHandlesSubTyping</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.HandlesAValueBeingAddedAndDeletedDuringTheSameSession</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.HandlesDeletesOfInstancesAlreadyLoaded</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.HandlesDeletesOfInstancesNotYetLoaded</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.HandlesHashSets</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.HandlesHashSetsInObjects</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.HandlesInstancesOfDifferentTypesWithTheSameId</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.LoadingRemovingAndAddingObjectInTransactionResultsInObjectBeingSaved</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.ObjectsWhoseKeysDifferOnlyByCaseAreConsideredTheSameObjectForCompatibilityWithSqlServer</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.ObjectsWhoseKeysDifferOnlyByTrailingSpacesTrailingWhiteSpaceCaseAreConsideredTheSameObjectForCompatibilityWithSqlServer</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.RepeatedlyAddingAndRemovingObjectResultsInNoObjectBeingSaved</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.ReturnsSameInstanceOnLoadAfterSave</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.ReturnsSameInstanceOnRepeatedLoads</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.Saves100NewDocumentsIn150Milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.ThrowsExceptionIfYouTryToSaveAnIHasPersistentIdentityWithNoId</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.ThrowsExceptionWhenAttemptingToDeleteNonExistingValue</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.ThrowsIfUsedByMultipleThreads</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.ThrowsWhenAttemptingToSaveExistingAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.TracksAndUpdatesLoadedAggregates</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.ExternalDependencies.KeyValueStorage.Sql.SqlDocumentDbTests.TryingToFetchNonExistentItemDoesNotCauseSessionToTryAndAddItWithANullInstance</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.AddingAndRemovingObjectResultsInNoObjectBeingSaved</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.AddingRemovingAndAddingObjectInTransactionResultsInNoObjectBeingSaved</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.CallingSaveWithAnInteraceAsTypeParameterDoesNotExplode</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.CanSaveAndLoadAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.CanSaveAndLoadAggregateForUpdate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.DeletingAllObjectsOfATypeLeavesNoSuchObjectsInTheDbButLeavesOtherObjectsInPlaceAndReturnsTheNumberOfDeletedObjects</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.DeletingAllObjectsOfATypeLeavesObjectOfInheritingTypes</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.FetchesAllinstancesPerType</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.GetAllHandlesSubTyping</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.GetAllIdsShouldOnlyReturnResultsWithTheGivenType</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.GetAllIdsShouldOnlyReturnResultsWithTheGivenTypeWhenCalledWithinTheInsertingTransaction</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.GetAllWithIdsReturnsAsManyResultsAsPassedIds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.GetAllWithIdsReturnsTheSameInstanceForAnyPreviouslyFetchedDocuments</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.GetAllWithIdsThrowsNoSuchDocumentExceptionExceptionIfAnyIdIsMissing</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.GetByIdsShouldReturnOnlyMatchingResultEvenWhenMoreResultsAreInTheCache</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.GetHandlesSubTyping</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.HandlesAValueBeingAddedAndDeletedDuringTheSameSession</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.HandlesDeletesOfInstancesAlreadyLoaded</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.HandlesDeletesOfInstancesNotYetLoaded</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.HandlesHashSets</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.HandlesHashSetsInObjects</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.HandlesInstancesOfDifferentTypesWithTheSameId</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.LoadingRemovingAndAddingObjectInTransactionResultsInObjectBeingSaved</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.ObjectsWhoseKeysDifferOnlyByCaseAreConsideredTheSameObjectForCompatibilityWithSqlServer</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.ObjectsWhoseKeysDifferOnlyByTrailingSpacesTrailingWhiteSpaceCaseAreConsideredTheSameObjectForCompatibilityWithSqlServer</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.RepeatedlyAddingAndRemovingObjectResultsInNoObjectBeingSaved</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.ReturnsSameInstanceOnLoadAfterSave</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.ReturnsSameInstanceOnRepeatedLoads</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.Saves100NewDocumentsIn150Milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.ThrowsExceptionIfYouTryToSaveAnIHasPersistentIdentityWithNoId</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.ThrowsExceptionWhenAttemptingToDeleteNonExistingValue</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.ThrowsIfUsedByMultipleThreads</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.ThrowsWhenAttemptingToSaveExistingAggregate</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.TracksAndUpdatesLoadedAggregates</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.KeyValueStorage.InMemoryDocumentDbTests.TryingToFetchNonExistentItemDoesNotCauseSessionToTryAndAddItWithANullInstance</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Exacly_once_guarantee_tests.If_transaction_fails_after_successfully_Publishing_ExactlyOnceEvent_event_never_reaches_remote_handler_but_does_reach_local_handler</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Exacly_once_guarantee_tests.If_transaction_fails_after_successfully_Sending_ExactlyOnceCommand_command_never_reaches_command_handler</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.Can_register_user_and_fetch_user_resource</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Failure_tests.If_command_handler_with_result_throws_awaiting_SendAsync_throws</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Failure_tests.If_query_handler_throws_awaiting_QueryAsync_throws</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Failure_tests.If_query_handler_throws_Query_throws</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture_tests.If_command_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture_tests.If_command_handler_with_result_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception_and_SendAsync_throws_MessageDispatchingFailedException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture_tests.If_event_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture_tests.If_query_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception_and_SendAsync_throws_MessageDispatchingFailedException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Parallelism_policies.Five_query_handlers_can_execute_in_parallel_when_using_Query</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Parallelism_policies.Five_query_handlers_can_execute_in_parallel_when_using_QueryAsync</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Parallelism_policies.Two_AtMostOnce_command_handlers_from_the_same_session_cannot_execute_in_parallel</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Parallelism_policies.Two_event_handlers_cannot_execute_in_parallel</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Parallelism_policies.Two_exactly_once_command_handlers_cannot_execute_in_parallel</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Query_policies.The_same_query_can_be_reused_in_parallel_without_issues</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Retry_policies_AtMostOnceCommand_when_command_handler_fails.Command_handler_is_tried_5_times</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Retry_policies_AtMostOnceCommand_when_command_handler_fails.ExactlyOnce_Event_raised_in_handler_does_not_reach_remote_handler</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Retry_policies_AtMostOnceCommand_when_command_handler_fails.ExactlyOnce_Event_raised_in_handler_reaches_local_handler_5_times</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Calling_GetRemote_within_a_transaction_with_Query_throws_TransactionPolicyViolationException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Calling_GetRemoteAsync_within_a_transaction_with_Query_throws_TransactionPolicyViolationException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Calling_PostRemoteAsync_within_a_transaction_AtLeastOnceCommand_throws_TransactionPolicyViolationException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Calling_PostRemoteAsync_within_a_transaction_with_AtLeastOnceCommand_throws_TransactionPolicyViolationException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Calling_PostRemoteAsync_without_a_transaction_with_ExactlyOnceCommand_throws_TransactionPolicyViolationException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Command_handler_runs_in_transaction_with_isolation_level_Serializable</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Command_handler_with_result_runs_in_transaction_with_isolation_level_Serializable</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Event_handler_runs_in_transaction_with_isolation_level_Serializable</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.Query_handler_does_not_run_in_transaction</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.Can_get_command_result</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.Can_navigate_async_to_startpage_execute_command_and_follow_command_result_link_to_the_created_resource</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.Can_navigate_to_startpage_execute_command_and_follow_command_result_link_to_the_created_resource</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.Local_Query_performance_tests.Runs_1_000__SingleThreaded_local_requests_making_10_local_queries_each_in_12_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.Local_Query_performance_tests.Runs_10_000__MultiThreaded_local_requests_making_10_local_queries_each_in_70_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.Local_Query_performance_tests.Runs_10_000__MultiThreaded_local_requests_making_a_single_local_query_each_in_16_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.Local_Query_performance_tests.Runs_10_000_SingleThreaded_local_requests_making_a_single_local_query_in_30_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.RemoteQueryPerformanceTests.Async_Runs_1_00_local_requests_making_one_async_remote_query_each_in_10_milliSeconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.RemoteQueryPerformanceTests.Async_Runs_100_local_requests_making_10_async_remote_queries_each_in_85_milliSeconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.RemoteQueryPerformanceTests.MultiThreaded_Runs_10_local_requests_making_10_remote_queries_each_in_14_milliSeconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.RemoteQueryPerformanceTests.MultiThreaded_Runs_100_local_requests_making_one_remote_query_each_in_13_milliSeconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.RemoteQueryPerformanceTests.SingleThreaded_Runs_10_local_requests_making_10_remote_queries_each_in_50_milliSeconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.Performance.RemoteQueryPerformanceTests.SingleThreaded_Runs_100_local_requests_making_one_remote_query_each_in_50_milliSeconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.When_scheduling_commands_to_be_sent_in_the_future.Messages_whose_due_time_has_passed_are_delivered</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Messaging.ServiceBusSpecification.When_scheduling_commands_to_be_sent_in_the_future.Messages_whose_due_time_have_not_passed_are_not_delivered</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Serialization.NewtonSoftEventStoreEventSerializerTests.IgnoresAllIAggregateEventProperties</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Serialization.NewtonSoftEventStoreEventSerializerTests.Should_roundtrip_simple_event_1000_times_in_15_milliseconds</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Serialization.NewtonSoftEventStoreEventSerializerTests.Should_roundtrip_simple_event_within_50_percent_of_default_serializer_performance</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Serialization.TypeRenamingSerializationTests.Handles_renaming_of_types</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Composable.Tests.Serialization.TypeRenamingSerializationTests.Roundtrips_polymorphic_types_types</TestName>
      </NamedTestSelector>
      <AllTestsSelector />
    </IgnoredTests>
  </Settings>
</ProjectConfiguration>